/*
 * Lee's API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get details of a customer</remarks>
        /// <param name="id"></param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/customer/{id}")]
        [ValidateModelState]
        [SwaggerOperation("CustomerIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(Customer), description: "OK")]
        public virtual IActionResult CustomerIdGet([FromRoute (Name = "id")][Required]int id)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Customer));
            string exampleJson = null;
            exampleJson = "{\r\n  \"name\" : \"name\",\r\n  \"creditLimit\" : 0.8008281904610115\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Customer>(exampleJson)
            : default(Customer);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/v1/health")]
        [ValidateModelState]
        [SwaggerOperation("HealthGet")]
        public virtual IActionResult HealthGet()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            return StatusCode(200, "Healthy!!!");

            //throw new NotImplementedException();
        }
    }
}
